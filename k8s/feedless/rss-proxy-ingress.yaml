apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: rss-proxy-rewrite
#  namespace: feedless
spec:
  replacePathRegex:
    regex: ^/(config.json|index.html|robots.txt|sitemap.xml)$
    replacement: /verticals-data/rss-proxy/${1}


---

apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: redirect-to-rssproxy-feedless
#  namespace: default
spec:
  redirectRegex:
    regex: ^.*$
    replacement: "https://rssproxy.feedless.org"
    permanent: false

---

apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: rss-proxy-root-rewrite
#  namespace: feedless
spec:
  replacePathRegex:
    regex: ^/$
    replacement: /verticals-data/rss-proxy/index.html

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: rss-proxy-route
#  namespace: feedless
spec:
  entryPoints:
    - web
    - websecure
  routes:
    # Handle `/`
    - match: Host(`rssproxy.feedless.org`) && Path(`/`)
      kind: Rule
      priority: 100 # note: higher wins
      services:
        - name: feedless-web
          port: 80
      middlewares:
        - name: rss-proxy-root-rewrite

    # Handle vertical configs
    - match: Host(`rssproxy.feedless.org`) && (Path(`/config.json`) || Path(`/index.html`) || Path(`/robots.txt`) || Path(`/sitemap.xml`))
      kind: Rule
      priority: 200
      services:
        - name: feedless-web
          port: 80
      middlewares:
        - name: rss-proxy-rewrite

    # Redirect rssproxy.migor.org
    - match: Host(`rssproxy.staging.migor.org`) && Path(`/`)
      kind: Rule
      priority: 8
      services:
        - name: feedless-web
          port: 80
      middlewares:
        - name: redirect-to-rssproxy-feedless

    # Redirect rssproxy-v1.migor.org
    - match: Host(`rssproxy-v1.migor.org`) && Path(`/`)
      kind: Rule
      priority: 7
      services:
        - name: feedless-web
          port: 80
      middlewares:
        - name: redirect-to-rssproxy-feedless

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rss-proxy-ingress
  #  namespace: feedless
  annotations:
    app.kubernetes.io/name: rss-proxy-ingress
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - api.rssproxy.staging.migor.org
        - rssproxy.feedless.org
        - rssproxy.staging.migor.org
        - rssproxy-v1.migor.org
      secretName: feedless-org-tls
  rules:
    - host: api.rssproxy.feedless.org
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: feedless-core
                port:
                  number: 8080
    - host: rssproxy.feedless.org
      http:
        paths:
          - path: /feed/static
            pathType: Prefix
            backend:
              service:
                name: feedless-core
                port:
                  number: 8080
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: feedless-core
                port:
                  number: 8080
          - path: /
            pathType: Prefix
            backend:
              service:
                name: feedless-web
                port:
                  number: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rss-proxy-migor-org-ingress
  #  namespace: feedless
  annotations:
    app.kubernetes.io/name: rss-proxy-migor-org-ingress
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - rssproxy.migor.org
      secretName: rssproxy-migor-org-tls
  rules:
    - host: rssproxy.staging.migor.org
      http:
        paths:
          - path: /feed/static
            pathType: Prefix
            backend:
              service:
                name: feedless-core
                port:
                  number: 8080
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: feedless-core
                port:
                  number: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rss-proxy-v1-migor-org-ingress
  #  namespace: feedless
  annotations:
    app.kubernetes.io/name: rss-proxy-v1-migor-org-ingress
    cert-manager.io/cluster-issuer: letsencrypt
    traefik.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - rssproxy-v1.migor.org
      secretName: rssproxy-v1-migor-org-tls
  rules:
    - host: rssproxy-v1.migor.org
      http:
        paths:
          - path: /feed/static
            pathType: Prefix
            backend:
              service:
                name: feedless-core
                port:
                  number: 8080
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: feedless-core
                port:
                  number: 8080

