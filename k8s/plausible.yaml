apiVersion: v1
kind: Service
metadata:
  name: plausible-db
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: plausible
spec:
  type: ClusterIP
  ports:
    - name: db
      port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: plausible

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: plausible-db
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: plausible
spec:
  replicas: 1
  serviceName: plausible-db
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/component: database
      app.kubernetes.io/part-of: plausible
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: plausible
    spec:
      restartPolicy: Always
      # see https://github.com/docker-library/postgres/blob/6bbf1c7b308d1c4288251d73c37f6caf75f8a3d4/14/buster/Dockerfile
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: plausible-db
          # supported versions are 12, 13, and 14
          image: postgres:16
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          env:
            - name: POSTGRES_DB
              value: plausible
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: plausible-db-user
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: plausible-db-user
                  key: password
          securityContext:
            allowPrivilegeEscalation: false
          resources:
            limits:
              memory: 2Gi
              cpu: 1500m
            requests:
              memory: 65Mi
              cpu: 15m
          readinessProbe:
            exec:
              command: [ "/bin/sh", "-c", "pg_isready -U postgres" ]
            initialDelaySeconds: 20
            failureThreshold: 6
            periodSeconds: 10
          livenessProbe:
            exec:
              command: [ "/bin/sh", "-c", "pg_isready -U postgres" ]
            initialDelaySeconds: 30
            failureThreshold: 3
            periodSeconds: 10
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: postgres
          app.kubernetes.io/component: database
          app.kubernetes.io/part-of: plausible
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 128Mi
          limits:
            storage: 15Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: plausible-events-db-config
data:
  clickhouse-config.xml: |
    <yandex>
        <logger>
            <level>warning</level>
            <console>true</console>
        </logger>
        <!-- Stop all the unnecessary logging -->
        <query_thread_log remove="remove"/>
        <query_log remove="remove"/>
        <text_log remove="remove"/>
        <trace_log remove="remove"/>
        <metric_log remove="remove"/>
        <asynchronous_metric_log remove="remove"/>
    </yandex>
  clickhouse-user-config.xml: |
    <yandex>
        <profiles>
            <default>
                <log_queries>0</log_queries>
                <log_query_threads>0</log_query_threads>
            </default>
        </profiles>
    </yandex>

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: plausible-events-db
  labels:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: plausible
spec:
  replicas: 1
  serviceName: plausible-events-db
  selector:
    matchLabels:
      app.kubernetes.io/name: clickhouse
      app.kubernetes.io/component: database
      app.kubernetes.io/part-of: plausible
  template:
    metadata:
      labels:
        app.kubernetes.io/name: clickhouse
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: plausible
    spec:
      restartPolicy: Always
      # see https://github.com/ClickHouse/ClickHouse/blob/master/docker/server/Dockerfile
      securityContext:
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
      containers:
        - name: plausible-events-db
          image: clickhouse/clickhouse-server:24.3.3.102-alpine
          imagePullPolicy: Always
          ports:
            - containerPort: 8123
          volumeMounts:
            - name: data
              mountPath: /var/lib/clickhouse
            - name: config
              mountPath: /etc/clickhouse-server/config.d/logging.xml
              subPath: clickhouse-config.xml
              readOnly: true
            - name: config
              mountPath: /etc/clickhouse-server/users.d/logging.xml
              subPath: clickhouse-user-config.xml
              readOnly: true
          env:
            - name: CLICKHOUSE_DB
              value: plausible
            - name: CLICKHOUSE_USER
              valueFrom:
                secretKeyRef:
                  name: plausible-events-db-user
                  key: username
            - name: CLICKHOUSE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: plausible-events-db-user
                  key: password
          securityContext:
            allowPrivilegeEscalation: false
          resources:
            limits:
              memory: 2Gi
              cpu: 1500m
            requests:
              memory: 80Mi
              cpu: 10m
          readinessProbe:
            httpGet:
              path: /ping
              port: 8123
            initialDelaySeconds: 20
            failureThreshold: 6
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /ping
              port: 8123
            initialDelaySeconds: 30
            failureThreshold: 3
            periodSeconds: 10
      volumes:
        - name: config
          configMap:
            name: plausible-events-db-config
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: clickhouse
          app.kubernetes.io/component: database
          app.kubernetes.io/part-of: plausible
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 128Mi
          limits:
            storage: 20Gi

---

apiVersion: v1
kind: Service
metadata:
  name: plausible-events-db
  labels:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: plausible
spec:
  type: ClusterIP
  ports:
    - name: db
      port: 8123
      targetPort: 8123
      protocol: TCP
  selector:
    app.kubernetes.io/name: clickhouse
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: plausible

---

apiVersion: v1
kind: Service
metadata:
  name: plausible-service
  labels:
    app.kubernetes.io/name: plausible
    app.kubernetes.io/component: server
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 8000
      protocol: TCP
  selector:
    app.kubernetes.io/name: plausible
    app.kubernetes.io/component: server

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: plausible-deployment
  labels:
    app.kubernetes.io/name: plausible
    app.kubernetes.io/component: server
spec:
  # Plausible is not currently designed to run in a clustered scenario. Increasing the replicas of this deployment is highly NOT recommended!
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: plausible
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: plausible
        app.kubernetes.io/component: server
    spec:
      restartPolicy: Always
      # see https://github.com/plausible/analytics/blob/master/Dockerfile
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: plausible-init
          image: ghcr.io/plausible/community-edition:v2.1.1
          command: [ 'sh', '-c', 'sleep 30 && /entrypoint.sh db createdb && /entrypoint.sh db migrate' ]
          env:
            - name: BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: plausible-env
                  key: BASE_URL
            - name: SECRET_KEY_BASE
              valueFrom:
                configMapKeyRef:
                  name: plausible-env
                  key: SECRET_KEY_BASE
            - name: TOTP_VAULT_KEY
              valueFrom:
                configMapKeyRef:
                  name: plausible-env
                  key: TOTP_VAULT_KEY
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: plausible-db-user
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: plausible-db-user
                  key: password
            - name: CLICKHOUSE_USER
              valueFrom:
                secretKeyRef:
                  name: plausible-events-db-user
                  key: username
            - name: CLICKHOUSE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: plausible-events-db-user
                  key: password
            - name: DATABASE_URL
              value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(PLAUSIBLE_DB_SERVICE_HOST):$(PLAUSIBLE_DB_SERVICE_PORT)/plausible
            - name: CLICKHOUSE_DATABASE_URL
              value: http://$(CLICKHOUSE_USER):$(CLICKHOUSE_PASSWORD)@$(PLAUSIBLE_EVENTS_DB_SERVICE_HOST):$(PLAUSIBLE_EVENTS_DB_SERVICE_PORT)/plausible
            - name: SMTP_HOST_ADDR
              value: $(PLAUSIBLE_SMTP_SERVICE_HOST)
          securityContext:
            allowPrivilegeEscalation: false
          resources:
            limits:
              memory: 2Gi
              cpu: 1500m
            requests:
              memory: 50Mi
              cpu: 10m
      containers:
        - name: plausible
          image: plausible/analytics:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: plausible-env
                  key: BASE_URL
            - name: SECRET_KEY_BASE
              valueFrom:
                configMapKeyRef:
                  name: plausible-env
                  key: SECRET_KEY_BASE
            - name: TOTP_VAULT_KEY
              valueFrom:
                configMapKeyRef:
                  name: plausible-env
                  key: TOTP_VAULT_KEY
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: plausible-db-user
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: plausible-db-user
                  key: password
            - name: CLICKHOUSE_USER
              valueFrom:
                secretKeyRef:
                  name: plausible-events-db-user
                  key: username
            - name: CLICKHOUSE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: plausible-events-db-user
                  key: password
            - name: DATABASE_URL
              value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(PLAUSIBLE_DB_SERVICE_HOST):$(PLAUSIBLE_DB_SERVICE_PORT)/plausible
            - name: CLICKHOUSE_DATABASE_URL
              value: http://$(CLICKHOUSE_USER):$(CLICKHOUSE_PASSWORD)@$(PLAUSIBLE_EVENTS_DB_SERVICE_HOST):$(PLAUSIBLE_EVENTS_DB_SERVICE_PORT)/plausible
            - name: SMTP_HOST_ADDR
              value: $(PLAUSIBLE_SMTP_SERVICE_HOST)
          securityContext:
            allowPrivilegeEscalation: false
          resources:
            limits:
              memory: 2Gi
              cpu: 1500m
            requests:
              memory: 140Mi
              cpu: 10m
          readinessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 35
            failureThreshold: 6
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8000
            initialDelaySeconds: 45
            failureThreshold: 3
            periodSeconds: 10
