version: '3.4'

# envs https://medium.com/softonic-eng/docker-compose-from-development-to-production-88000124a57c

services:

#    command: bash -c "gradle buildDockerAioChromium"

#  mq:
#    image: rabbitmq:management
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    networks:
#      - postgres
#
#  # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#_setting_jvm_heap_size
#  elastic:
#    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
#    environment:
#      #- ES_JAVA_OPTS="-Xms1g -Xmx1g"
#      - discovery.type=single-node
##      - node.name=es-node
##      - cluster.name=es-cluster
##      - discovery.type=single-node
#    ports:
#      - "9200:9200"

  feedless-ingress:
    image: damoeb/feedless:ingress-latest
    environment:
      API_SERVER_NAMES: "api.feedless.org"
      APP_SERVER_NAMES: "feedless.org"
      INTERNAL_API_URL: "localhost:8080"
      INTERNAL_APP_URL: "localhost:4200"
    ports:
      - "8888:80"

#  smtp:
#    image: rnwood/smtp4dev
#    ports:
#      - "2525:25"
#      - "4000:80"

#  feed-validator:
#    image: unboxed/docker-feed-validator
#    ports:
#      - "8081:80"

# /usr/share/postgresql/15/extension/postgis.control
  # https://github.com/postgis/docker-postgis
  postgis:
    image: postgis/postgis:15-3.4-alpine
    container_name: postgis
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=100
    expose:
      - 5433
    ports:
      - "5433:5432"
    logging:
      driver: json-file
      options:
        max-size: 10m
    networks:
      - postgis

  feedless-agent:
    image: damoeb/feedless:agent-latest
#    deploy:
#      replicas: 2
    security_opt:
      - seccomp=./chrome.json
    restart: unless-stopped
    deploy:
      replicas: 2
    environment:
      - APP_EMAIL=${APP_ROOT_EMAIL}
      - APP_SECRET_KEY=${APP_ROOT_SECRET_KEY}
      - APP_PRERENDER_TIMEOUT_MILLIS=${APP_PRERENDER_TIMEOUT_MILLIS}
      - APP_HOST=feedless-core:8080
      - APP_SECURE=false
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      - "3000:3000"
#    healthcheck:
#      test: curl -f https://localhost:3000 || exit 1
    networks:
      - monitoring

  feedless-app:
    image: damoeb/feedless:app-latest
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: 10m
    volumes:
      - ./docker/app/app-config.json:/usr/share/nginx/html/config.json
    ports:
      - "4200:80"

  feedless-core:
    image: damoeb/feedless:core-latest
    restart: unless-stopped
#    healthcheck:
#      test: curl -f https://localhost:8080 || exit 1
    depends_on:
      - postgis
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - APP_DATABASE_URL=jdbc:postgresql://postgis:5433/${POSTGRES_DB}
      - APP_ACTIVE_PROFILES=database,cache,metrics,testing
      - APP_AUTHENTICATION=${APP_AUTHENTICATION}
      - APP_WHITELISTED_HOSTS=feedless-core
      - AUTH_TOKEN_ANONYMOUS_VALIDFORDAYS=3
    networks:
      - postgis
      - monitoring

  feedless-aio-chromium:
    image: damoeb/feedless:aio-chromium-latest
    restart: unless-stopped
#    healthcheck:
#      test: curl -f https://localhost:8080 || exit 1
    depends_on:
      - postgis
    ports:
      - "8080:8080"
    volumes:
      - ./docker/app/app-config.json:/usr/feedless/public/config.json
      - ./docker/your-license.key:/usr/feedless/license.key:rw
    security_opt:
      - seccomp=./chrome.json
    env_file:
      - selfhosting.env
    networks:
      - postgis
      - monitoring


# ----------------------------------------------------------------------------------------------------------------------
# -- MONITORING
# ----------------------------------------------------------------------------------------------------------------------

  prometheus:
    image: prom/prometheus
    environment:
      - APP_ACTUATOR_PASSWORD=${APP_ACTUATOR_PASSWORD}
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    #    extra_hosts:
    #      - "feedless-core:localhost"
    networks:
      - postgis
      - monitoring

  loki:
    image: grafana/loki:2.5.0
    volumes:
      - ./docker/loki:/etc/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki.yml
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:2.5.0
    volumes:
      - /var/log:/var/log
      - ./docker/promtail:/etc/promtail
    ports:
      - "3200:3100"
    command: -config.file=/etc/promtail/promtail.yml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - monitoring

networks:
  postgis:
    driver: bridge
  monitoring:
    driver: bridge
